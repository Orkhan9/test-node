{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "airbnb-base",
    "plugin:node/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "rules": {
    "semi": [
      2,
      "always"
    ],
    // JavaScript
    // "linebreak-style": ["error", "unix"],
    "object-curly-spacing": [
      "error",
      "never"
    ],
    "indent": [
      "error",
      "tab",
      {
        "SwitchCase": 1
      }
    ],
    "no-tabs": "off",
    "object-curly-newline": "off",
    "max-len": [
      "error",
      {
        "code": 120,
        "tabWidth": 4
      }
    ],
    "no-restricted-syntax": "off",
    "operator-linebreak": [
      "error",
      "after",
      {
        "overrides": {
          "?": "before",
          ":": "before"
        }
      }
    ],
    "lines-between-class-members": [
      "error",
      "always",
      {
        "exceptAfterSingleLine": true
      }
    ],
    "no-console": "off",
    "no-await-in-loop": "off",
    "no-continue": "off",
    "no-underscore-dangle": [
      "error",
      {
        "allow": [
          "_id"
        ]
      }
    ],
    "max-classes-per-file": "off",
    "class-methods-use-this": "off",
    "no-shadow": "off",
    // use "@typescript-eslint/no-shadow": "error"

    // Import
    "import/newline-after-import": [
      "error",
      {
        "count": 1
      }
    ],
    "import/prefer-default-export": "off",
    "import/extensions": [
      "error",
      {
        "ts": "never"
      }
    ],
    // ES6
    "arrow-body-style": [
      "error",
      "as-needed"
    ],
    "arrow-parens": [
      "error",
      "always"
    ],
    // Typescript
    "@typescript-eslint/indent": "off",
    // Возможно стоит включить
    "@typescript-eslint/explicit-module-boundary-types": "off",
    // Преобразование в строку
    "@typescript-eslint/restrict-template-expressions": [
      "error",
      {
        "allowAny": true,
        "allowNullish": true,
        "allowBoolean": true
      }
    ],
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": false
      }
    ],
    "@typescript-eslint/no-shadow": "error",
    // Node
    "node/no-unsupported-features/es-syntax": "off",
    "node/no-missing-import": [
      "error",
      {
        "resolvePaths": [
          ".."
        ],
        "tryExtensions": [
          ".ts",
          ".js"
        ]
      }
    ]
  }
}
